// Generated by CoffeeScript 1.4.0
(function() {
  var draw;

  draw = function(data) {
    var a, colorScale, darkBlue, e, edges, force, gray, green, h, maxAbstracts, minAbstracts, nodes, pad, red, svg, tip, w, _i, _j, _len, _len1, _ref, _ref1;
    w = 750;
    h = 750;
    pad = {
      left: 60,
      top: 40,
      right: 40,
      bottom: 40
    };
    darkBlue = "darkslateblue";
    green = "#060";
    red = "crimson";
    gray = "#aaa";
    data.authoredges2 = [];
    _ref = data.authoredges;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      e = _ref[_i];
      data.authoredges2.push({
        source: e[0],
        target: e[1]
      });
    }
    minAbstracts = 50;
    maxAbstracts = 0;
    _ref1 = data.authors;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      a = _ref1[_j];
      if (a.nabstracts < minAbstracts) {
        minAbstracts = a.nabstracts;
      }
      if (a.nabstracts > maxAbstracts) {
        maxAbstracts = a.nabstracts;
      }
    }
    force = d3.layout.force().nodes(data.authors).links(data.authoredges2).size([w, h]).linkDistance([20]).charge([-50]).start();
    svg = d3.select("div#authors").append("svg").attr("width", w + pad.left + pad.right).attr("height", h + pad.top + pad.bottom);
    svg.append("rect").attr("x", pad.left).attr("y", pad.top).attr("width", w).attr("height", h).attr("fill", "none").attr("stroke", "black").attr("stroke-width", 2);
    tip = d3.svg.tip().orient("right").padding(3).text(function(d) {
      return d.name;
    }).attr("class", "d3-tip").attr("id", "tip");
    colorScale = d3.scale.log().domain([1, maxAbstracts]).range(["white", darkBlue]).clamp(true);
    edges = svg.selectAll("line").data(data.authoredges2).enter().append("line").style("stroke", gray).style("stroke-width", 1);
    nodes = svg.selectAll("circle").data(data.authors).enter().append("circle").attr("r", 6).style("fill", function(d) {
      return colorScale(d.nabstracts);
    }).style("stroke", "black").style("stroke-width", 1).call(force.drag).on("mouseover", function(d) {
      d3.select(this).attr("r", 8);
      return tip.call(this, d);
    }).on("mouseout", function(d) {
      d3.select(this).attr("r", 6);
      return d3.selectAll("#tip").remove();
    });
    return force.on("tick", function() {
      edges.attr("x1", function(d) {
        return d.source.x + pad.left;
      }).attr("y1", function(d) {
        return d.source.y + pad.top;
      }).attr("x2", function(d) {
        return d.target.x + pad.left;
      }).attr("y2", function(d) {
        return d.target.y + pad.top;
      });
      return nodes.attr("cx", function(d) {
        return d.x + pad.left;
      }).attr("cy", function(d) {
        return d.y + pad.top;
      });
    });
  };

  d3.json("abstracts.json", draw);

}).call(this);
